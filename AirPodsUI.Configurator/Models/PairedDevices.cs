// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AirPodsUI.Configurator;
//
//    var pairedDevicesJson = PairedDevicesJson.FromJson(jsonString);

namespace AirPodsUI.Configurator
{
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class PairedDevicesJson
    {
        [JsonProperty("Devices")]
        public List<Device> Devices { get; set; }
    }

    public partial class Device
    {
        [JsonProperty("DeviceType")]
        public string DeviceType { get; set; }

        [JsonProperty("DeviceName")]
        public string DeviceName { get; set; }

        [JsonProperty("DeviceAddress")]
        public string DeviceAddress { get; set; }

        [JsonProperty("TemplateLocation")]
        public string TemplateLocation { get; set; }
    }

    public partial class PairedDevicesJson
    {
        public static PairedDevicesJson FromJson(string json)
        {
            return JsonConvert.DeserializeObject<PairedDevicesJson>(json, AirPodsUI.Configurator.PDConverter.Settings);
        }
    }

    public static class PDSerialize
    {
        public static string ToJson(this PairedDevicesJson self)
        {
            return JsonConvert.SerializeObject(self, AirPodsUI.Configurator.PDConverter.Settings);
        }
    }

    internal static class PDConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}